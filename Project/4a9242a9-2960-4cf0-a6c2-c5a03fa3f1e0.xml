{"CLs":[{"__type":"LD","Var":"P_On"},{"__type":"IST","EID":"63a9214e-1606-4ec9-b175-622de46246d9","H":335,"Ix":1,"TXT":"\/\/-- Update Disabled State Graphics to HMI\u000d\u000aHMI_DisableState[0]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].StoppingState;\u000d\u000aHMI_DisableState[1]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].ResettingState;\u000d\u000aHMI_DisableState[2]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].StartingState;\u000d\u000aHMI_DisableState[3]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].CompletingState;\u000d\u000aHMI_DisableState[4]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].CompleteState;\u000d\u000aHMI_DisableState[5]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].HoldingState;\u000d\u000aHMI_DisableState[6]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].HeldState;\u000d\u000aHMI_DisableState[7]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].UnholdingState;\u000d\u000aHMI_DisableState[8]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].SuspendingState;\u000d\u000aHMI_DisableState[9]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].SuspendedState;\u000d\u000aHMI_DisableState[10]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].UnssupendingState;\u000d\u000aHMI_DisableState[11]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].AbortingState;\u000d\u000aHMI_DisableState[12]:=UMDisableStatesActual[myMachine.Status.UnitModeCurrent].ClearingState;","W":800,"X":1}],"CMT":"Updates Disabled States Grapic to HMI","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Var":"P_On"},{"__type":"IST","EID":"507457f0-0049-422b-a4c2-6c9555c29c9a","H":135.00000000000011,"Ix":1,"TXT":"\/\/Current State Elapsed time & Current Mode Elapsed time\u000d\u000aTmp_PreModeTime:=DINT_TO_LINT(myMachine.Admin.ModeCurrentTime[myMachine.Status.UnitModeCurrent]);\u000d\u000aPresentModeTime:=SecToTime(Tmp_PreModeTime);\u000d\u000aTmp_PreModePreStateTime:=DINT_TO_LINT(myMachine.Admin.StateCurrentTime[myMachine.Status.UnitModeCurrent,myMachine.Status.StateCurrent]);\u000d\u000aPreModePreStateTime:=SecToTime(Tmp_PreModePreStateTime);","W":824,"X":1}],"CMT":"Updates Present State Times to HMI","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Var":"P_On"},{"__type":"IST","EID":"664497eb-e4c6-4dc3-8c76-b9cd5846587e","H":234,"Ix":1,"TXT":"\/\/REMOTE INTERFACE COMMAND\u000d\u000a\u000d\u000a\/\/Commanded Mode and Mode Change Request Handled in:\u000d\u000a\/\/\"UnitModule-->PackMLStateMachine\"\u000d\u000a\u000d\u000a\/\/MachSpeed Command is Handled in:\u000d\u000a\/\/\"EM0_Belt-->Execute_6\"\u000d\u000a\/\/\"EM1_Disk-->Execute_6\"\u000d\u000a\u000d\u000a\/\/Control Command and Command Change Request Handled in\u000d\u000a\/\/\"UnitModule-->PackMLStateMachine\"\u000d\u000a;\u000d\u000a","W":746,"X":1}],"CMT":"REMOTE INTERFACE: COMMAND","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Var":"P_On"},{"__type":"IST","EID":"6418fe89-c2b9-4de0-b28a-a3c9dd431006","H":342,"Ix":1,"TXT":"\/\/ REMOTE INTERFACE STATUS\u000d\u000a\u000d\u000a\/\/Starved and Blocked status report\u000d\u000a\/\/ I3 forces Starved\u000d\u000a\/\/ I4 forces Blocked\u000d\u000a\/\/ The handling is done in EM2 program (Suspending and Suspended)\u000d\u000a\u000d\u000a\/\/Mach Speed report\u000d\u000amyMachine.Status.MachSpeed:=myMachine.Command.MachSpeed;\u000d\u000amyMachine.Status.CurMachSpeed:=to_real(ActualMachineSpeed);\u000d\u000a\u000d\u000a\/\/Current Mach speed\u000d\u000a\/\/Handled in:\u000d\u000a\/\/\"EM1_Disk-->Execute_6\"\u000d\u000a","W":725,"X":1}],"CMT":"REMOTE INTERFACE STATUS","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Var":"P_On"},{"__type":"IST","EID":"d22437bd-dd32-432b-a36e-78ed1996ca4d","H":470.33333333333326,"Ix":1,"TXT":"\/\/ REMOTE INTERFACE ADMIN\u000d\u000a\u000d\u000a\/\/Times\u000d\u000a\/\/ Processed in program \"UnitModule-->OEE\"\u000d\u000a\u000d\u000a\/\/Clear products when requested\u000d\u000aIF ResetAllTimes THEN\u000d\u000a\u0009tmp_AccDefProductCount:=0;\u000d\u000a\u0009Tmp_AccProductCount:=0;\u000d\u000a\u0009EM0_ProductsDone:=0;\u000d\u000a\u0009EM1_ProductsDone:=0;\u000d\u000a\u0009myMachine.Admin.ProdProcessedCount[1].AccCount:=0;\u000d\u000a\u0009myMachine.Admin.ProdProcessedCount[1].Count:=0;\u000d\u000a\u0009myMachine.Admin.ProdDefectiveCount[1].AccCount:=0;\u000d\u000a\u0009myMachine.Admin.ProdDefectiveCount[1].Count:=0;\u000d\u000a\u0009myMachine.Admin.ProdProcessedCount[2].AccCount:=0;\u000d\u000a\u0009myMachine.Admin.ProdProcessedCount[2].Count:=0;\u000d\u000a\u0009myMachine.Admin.ProdDefectiveCount[2].AccCount:=0;\u000d\u000a\u0009myMachine.Admin.ProdDefectiveCount[2].Count:=0;\u000d\u000a\u0009myMachine.Admin.ProdProcessedCount[3].AccCount:=0;\u000d\u000a\u0009myMachine.Admin.ProdProcessedCount[3].Count:=0;\u000d\u000a\u0009myMachine.Admin.ProdDefectiveCount[3].AccCount:=0;\u000d\u000a\u0009myMachine.Admin.ProdDefectiveCount[3].Count:=0;\u000d\u000aEND_IF;\u000d\u000a\u0009","W":1155.3333333333333,"X":1}],"CMT":"REMOTE INTERFACE ADMIN","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Var":"P_On"},{"__type":"IST","EID":"5d5cbe15-e585-4e81-85d8-c8aeb138a68e","H":449.33333333333314,"Ix":1,"TXT":"\/\/Product count\u000d\u000amyMachine.Admin.ProdProcessedCount[1].Count:=MIN(EM0_ProductsDone,EM1_ProductsDone);\u000d\u000amyMachine.Admin.ProdProcessedCount[1].AccCount:=Tmp_AccProductCount+\u0009myMachine.Admin.ProdProcessedCount[1].Count;\u000d\u000a\u000d\u000a\/\/Defective products count\u000d\u000a\u0009myMachine.Admin.ProdDefectiveCount[1].AccCount:=tmp_AccDefProductCount+\u0009myMachine.Admin.ProdDefectiveCount[1].Count;\u000d\u000a\u0009\u0009\u000d\u000a\/\/Clear actual products when Load the new lot and not in Execute\u000d\u000aIF (myMachine.Status.StateCurrent<>6) AND (BatchNumberHMI<>BatchNumber) THEN;\u000d\u000a\u0009\/\/Load a new lot and calculate the settings\u000d\u000a\u0009BatchNumber:=BatchNumberHMI;\u000d\u000a\u0009LotNumOfProducts:=BatchTable[BatchNumber,1]; \/\/Number Of Products\u000d\u000a\u0009myMachine.Command.MachSpeed:=TO_REAL(BatchTable[BatchNumber,2]); \/\/Machine Speed\u000d\u000a\u0009DwellTime:=NanoSecToTime(DINT_TO_LINT(ProductDefinition[BatchTable[BatchNumber,0],3])*1000000); \/\/Dwell time\u000d\u000a\u0009DwellReal:=TO_LREAL(ProductDefinition[BatchTable[BatchNumber,0],3]);\u000d\u000a\u0009BeltDistance:=TO_LREAL(ProductDefinition[BatchTable[BatchNumber,0],0]);\u000d\u000a\u0009DiskDistance:=TO_LREAL(ProductDefinition[BatchTable[BatchNumber,0],1]);\u000d\u000a\u0009EM0_ProductsDone:=0;\u000d\u000a\u0009EM1_ProductsDone:=0;\u000d\u000a\u0009myMachine.Admin.ProdProcessedCount[1].Count:=0;\u000d\u000a\u0009myMachine.Admin.ProdDefectiveCount[1].Count:=0;\u000d\u000a\u0009Tmp_AccProductCount:=myMachine.Admin.ProdProcessedCount[1].AccCount;\u000d\u000a\u0009tmp_AccDefProductCount:=myMachine.Admin.ProdDefectiveCount[1].AccCount;\u000d\u000aEND_IF;\u000d\u000a","W":1159.3333333333333,"X":1}],"LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Var":"P_On"},{"__type":"IST","EID":"323f059e-0bb7-42df-b08a-766075443a67","H":562.666666666667,"Ix":1,"TXT":"\/\/IF we are in PackML windows and CyclicMode is enabled:\u000d\u000aIF HMI_Screen_Name='PackML' AND CyclicOperation=TRUE THEN\u000d\u000a\u0009CASE myMachine.Status.StateCurrent OF\u000d\u000a\u0009\u00094:\/\/Idle state\u000d\u000a\u0009\u0009\u0009\/\/Start timer\u000d\u000a\u0009\u0009\u0009ExTimer:=TRUE;\u000d\u000a\u0009\u0009\u0009myMachine.Command.CntrlCmd:=2;\u0009\/\/RUN command when we are in IDLE\u000d\u000a\u0009\u0009\u0009\/\/Execute transition\u000d\u000a\u0009\u0009\u0009if TimerIdle.Q THEN  myMachine.Command.CmdChangeRequest:=TRUE; END_IF;\/\/Request to Execute\u000d\u000a\u0009\u000917:\/\/Complete state\u000d\u000a\u0009\u0009\u0009\/\/Start timer\u000d\u000a\u0009\u0009\u0009ExTimer:=TRUE;\u000d\u000a\u0009\u0009\u0009myMachine.Command.CntrlCmd:=1;\u0009\/\/RESET command when we are in COMPLETE\u000d\u000a\u0009\u0009\u0009if TimerComplete.Q THEN  myMachine.Command.CmdChangeRequest:=TRUE; END_IF;\/\/Request to Execute\u000d\u000a\u0009\u0009ELSE\u000d\u000a\u0009\u0009\u0009myMachine.Command.CmdChangeRequest:=FALSE; \/\/Clear the Request\u000d\u000a\u0009\u0009\u0009ExTimer:=FALSE;\u000d\u000a\u0009END_CASE;\u000d\u000aELSE;\u000d\u000a\u0009myMachine.Command.CmdChangeRequest:=FALSE; \/\/Clear the Request\u0009\u000d\u000a\u0009ExTimer:=FALSE;\u000d\u000aEND_IF;\u000d\u000aTimerIdle(In:=ExTimer, PT:=TransitionDelay[4]);\u000d\u000aTimerComplete(In:=ExTimer, PT:=TransitionDelay[17]);\u000d\u000a","W":1146,"X":1}],"CMT":"REMOTE INTERFACE MANUAL\/AUTOMATIC","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Var":"EM2Summation"},{"__type":"IST","EID":"5ec5e9e2-9de6-44d6-acce-2fc178187dd9","H":456,"Ix":1,"TXT":"\/\/ ALARMS TO PACKTAGS\u000d\u000a\u000d\u000a\/\/Active alarms\u000d\u000amyMachine.Admin.AlarmExtent:=UNNumberOfActiveAlarms;\u000d\u000aFOR Index:=0 TO 19 BY 1 DO\u000d\u000a\u0009IF Index<myMachine.Admin.AlarmExtent THEN\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].ID:=UNActiveAlarmsArray[myMachine.Admin.AlarmExtent-Index-1].EventType.ID;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Value:=UNActiveAlarmsArray[myMachine.Admin.AlarmExtent-Index-1].EventType.Value;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Category:=UNActiveAlarmsArray[myMachine.Admin.AlarmExtent-Index-1].EventType.Category;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Message:=UNActiveAlarmsArray[myMachine.Admin.AlarmExtent-Index-1].EventType.Description;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Trigger:=UNActiveAlarmsArray[myMachine.Admin.AlarmExtent-Index-1].Active;\u000d\u000a\u0009\u0009\\\\OmronLib\\PackML30\\DT_TO_PackTagDINTarray(UNActiveAlarmsArray[myMachine.Admin.AlarmExtent-Index-1].OccuredTime,Temp_PMLTime);\u000d\u000a\u0009\u0009\u0009myMachine.Admin.Alarm[Index].DateTime:=Temp_PMLTime;\u000d\u000a\u0009\u0009\\\\OmronLib\\PackML30\\DT_TO_PackTagDINTarray(UNActiveAlarmsArray[myMachine.Admin.AlarmExtent-Index-1].AcknowledgedTime,Temp_PMLTime);\u000d\u000a\u0009\u0009\u0009myMachine.Admin.Alarm[Index].AckDateTime:=Temp_PMLTime;\u000d\u000a\u0009ELSE\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].ID:=0;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Value:=0;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Category:=0;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Message:='';\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Trigger:=FALSE;\u000d\u000a\u0009\u0009\\\\OmronLib\\PackML30\\DT_TO_PackTagDINTarray(DATE_AND_TIME#1970-01-01-00:00:00.00,myMachine.Admin.Alarm[Index].DateTime);\u000d\u000a\u0009\u0009\\\\OmronLib\\PackML30\\DT_TO_PackTagDINTarray(DATE_AND_TIME#1970-01-01-00:00:00.00,myMachine.Admin.Alarm[Index].AckDateTime);\u000d\u000a\u0009END_IF;\u000d\u000aEND_FOR;\u000d\u000amyMachine.Admin.AlarmExtent:=UNActiveAlarms.SizeOfOutputAlarms;\u000d\u000a\u000d\u000a\/\/First Alarm is considered STOP REASON\u000d\u000amyMachine.Admin.StopReason[0].ID:=UN_AlarmSummation.Sts_FirstOutAlarm.EventType.ID;\u000d\u000amyMachine.Admin.StopReason[0].Value:=UN_AlarmSummation.Sts_FirstOutAlarm.EventType.Value;\u000d\u000amyMachine.Admin.StopReason[0].Category:=UN_AlarmSummation.Sts_FirstOutAlarm.EventType.Category;\u000d\u000amyMachine.Admin.StopReason[0].Message:=UN_AlarmSummation.Sts_FirstOutAlarm.EventType.Description;\u000d\u000amyMachine.Admin.StopReason[0].Trigger:=UN_AlarmSummation.Sts_FirstOutAlarm.Active;\u000d\u000a\\\\OmronLib\\PackML30\\DT_TO_PackTagDINTarray(UN_AlarmSummation.Sts_FirstOutAlarm.OccuredTime,myMachine.Admin.StopReason[0].DateTime);\u000d\u000a\\\\OmronLib\\PackML30\\DT_TO_PackTagDINTarray(UN_AlarmSummation.Sts_FirstOutAlarm.AcknowledgedTime,myMachine.Admin.StopReason[0].AckDateTime);\u000d\u000amyMachine.Admin.StopReasonExtent:=1;\u000d\u000a\u000d\u000a\/\/ALARM HISTORY\u000d\u000a\/\/Check how many alarms need to be updated in the history\u000d\u000aAlarmToUpdate:=0;\u000d\u000aCheckIndex:=myMachine.Admin.AlarmExtent-1-AlarmToUpdate;\u000d\u000aWHILE (DateLastHistoryAlarm<UNActiveAlarmsArray[CheckIndex].OccuredTime) AND (CheckIndex>=0) DO\u000d\u000a\u0009AlarmToUpdate:=AlarmToUpdate+1;\u000d\u000a\u0009CheckIndex:=myMachine.Admin.AlarmExtent-1-AlarmToUpdate;\u000d\u000aEND_WHILE;\u000d\u000a\/\/Make the update\u000d\u000aIF AlarmToUpdate>0 THEN\u000d\u000a\u0009\/\/Shifth actual history\u000d\u000a\u0009FOR Index:= AlarmToUpdate TO 31 BY 1 DO\u000d\u000a\u0009\u0009myMachine.Admin.AlarmHistory[Index]:=myMachine.Admin.AlarmHistory[Index-AlarmToUpdate];\u000d\u000a\u0009END_FOR;\u000d\u000a\u0009\/\/Copy new history\u000d\u000a\u0009FOR Index:=0 to AlarmToUpdate-1 BY 1 DO\u000d\u000a\u0009\u0009myMachine.Admin.AlarmHistory[Index]:=myMachine.Admin.Alarm[Index];\u000d\u000a\u0009END_FOR;\u000d\u000a\u0009\/\/Update last alarm date and time\u000d\u000a\u0009DateLastHistoryAlarm:=UNActiveAlarmsArray[myMachine.Admin.AlarmExtent-1].OccuredTime;\u000d\u000a\u0009myMachine.Admin.AlarmHistoryExtent:=myMachine.Admin.AlarmHistoryExtent+AlarmToUpdate;\u000d\u000a\u0009IF myMachine.Admin.AlarmHistoryExtent>32 THEN myMachine.Admin.AlarmHistoryExtent:=32; END_IF;\u000d\u000aEND_IF;","W":1236.0000000000005,"X":1}],"CMT":"ALARM HANDLING","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Id":"fb9c3753-63fa-42ed-ace7-797a00000020","Up":true,"Var":"ClearAlarmList"},{"__type":"IST","EID":"9649f591-7827-4560-acff-cfa7d7572e6e","H":222,"Ix":1,"TXT":"FOR Index:=0 TO 31 BY 1 DO\u000d\u000a\u0009myMachine.Admin.Alarm[Index].ID:=0;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Value:=0;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Category:=0;\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Message:='';\u000d\u000a\u0009\u0009myMachine.Admin.Alarm[Index].Trigger:=FALSE;\u000d\u000a\u0009\u0009\\\\OmronLib\\PackML30\\DT_TO_PackTagDINTarray(DATE_AND_TIME#1970-01-01-00:00:00.00,myMachine.Admin.Alarm[Index].DateTime);\u000d\u000a\u0009\u0009\\\\OmronLib\\PackML30\\DT_TO_PackTagDINTarray(DATE_AND_TIME#1970-01-01-00:00:00.00,myMachine.Admin.Alarm[Index].AckDateTime);\u000d\u000aEND_FOR;myMachine.Admin.AlarmHistoryExtent:=0;\u000d\u000a","W":795,"X":1}],"LRI":2,"RRI":3,"VLs":[]}
