<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>(*G5 Monitoring*)&#xD;
&#xD;
IF Enable and not bInit THEN&#xD;
	&#xD;
				Busy:=TRUE;&#xD;
				bInit:=TRUE;&#xD;
	&#xD;
		(*Operating Time*)&#xD;
	&#xD;
				// Total Drive power On time *&#xD;
				ObjectsG5[0].Object.Index:= 16#400D;&#xD;
				ObjectsG5[0].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[0].Size:= 4 ;&#xD;
				&#xD;
				// Capacitor life **&#xD;
				ObjectsG5[1].Object.Index:= 16#4013;&#xD;
				ObjectsG5[1].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[1].Size:= 2 ;&#xD;
				&#xD;
				// Fan service life **&#xD;
				ObjectsG5[2].Object.Index:= 16#4012;&#xD;
				ObjectsG5[2].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[2].Size:= 2 ;&#xD;
				&#xD;
&#xD;
		(*Load ratio and inertia *)&#xD;
				&#xD;
				// Motor loadRatio *&#xD;
				ObjectsG5[3].Object.Index:= 16#400B;&#xD;
				ObjectsG5[3].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[3].Size:= 2 ;&#xD;
&#xD;
				//Machine Inertia *&#xD;
				ObjectsG5[4].Object.Index:= 16#3004;&#xD;
				ObjectsG5[4].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[4].Size:= 2 ;&#xD;
				&#xD;
				//Regeneration load ratio *&#xD;
				ObjectsG5[5].Object.Index:= 16#400C;&#xD;
				ObjectsG5[5].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[5].Size:= 2 ;&#xD;
				&#xD;
				&#xD;
&#xD;
		(*Temperature*)&#xD;
		&#xD;
				//Servodrive temperature *&#xD;
				ObjectsG5[6].Object.Index:= 16#400E;&#xD;
				ObjectsG5[6].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[6].Size:= 2 ;&#xD;
&#xD;
				//Encoder temperature *&#xD;
				ObjectsG5[7].Object.Index:= 16#4014;&#xD;
				ObjectsG5[7].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[7].Size:=2 ;&#xD;
&#xD;
	(* Alarm and Warning  *)&#xD;
	&#xD;
				//Full alarm code&#xD;
				ObjectsG5[8].Object.Index:= 16#4000;&#xD;
				ObjectsG5[8].Object.Subindex:=16#81 ;&#xD;
				ObjectsG5[8].Size:= 4 ;&#xD;
				&#xD;
				//Warning&#xD;
				ObjectsG5[9].Object.Index:= 16#4000;&#xD;
				ObjectsG5[9].Object.Subindex:=16#81 ;&#xD;
				ObjectsG5[9].Size:= 4 ;&#xD;
				&#xD;
	&#xD;
	(*Operation and Error Counters*)&#xD;
	&#xD;
				//Dynamic Brake  operation counter *&#xD;
				ObjectsG5[10].Object.Index:= 16#4010;&#xD;
				ObjectsG5[10].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[10].Size:= 4 ;&#xD;
				&#xD;
				//Inrush current protection relay operation counter *&#xD;
				ObjectsG5[11].Object.Index:= 16#400F;&#xD;
				ObjectsG5[11].Object.Subindex:=16#00 ;&#xD;
				ObjectsG5[11].Size:= 4 ;&#xD;
				&#xD;
				uiMaxIndex:=7;&#xD;
				&#xD;
				uiStage:=10;&#xD;
&#xD;
ELSIF Enable  AND bInit THEN &#xD;
	&#xD;
	CASE uiStage OF &#xD;
		&#xD;
		10:  // Enable&#xD;
			bExecute:=TRUE;&#xD;
			Done:=FALSE;&#xD;
			&#xD;
			IF batchSDO.Done THEN&#xD;
				Data.Drive.TimeInOperation:= 0.1*TO_REAL(ObjectsG5[0].Value);&#xD;
				Data.Drive.CapacitorRatio:=0.1*TO_REAL(ObjectsG5[1].Value);&#xD;
				Data.Drive.FanLifeRatio :=0.1*TO_REAL(ObjectsG5[2].Value);&#xD;
			&#xD;
				Data.Motor.LoadRatio:= ObjectsG5[3].Value;&#xD;
				Data.Drive.InertiaRatio:=ObjectsG5[4].Value;&#xD;
				Data.Drive.RegenerationRatio:=ObjectsG5[5].Value;&#xD;
				&#xD;
				Data.Drive.Temperature:=ObjectsG5[6].Value;&#xD;
				Data.Motor.EncoderTemperature:=(ObjectsG5[7].Value);&#xD;
				&#xD;
				Data.Drive.AlarmCode:=TO_DWORD(ObjectsG5[8].Value);&#xD;
				Data.Drive.AlarmCode:=TO_DWORD(ObjectsG5[9].Value);&#xD;
			&#xD;
				Data.DiagnoseCounters.DynamicBrake:=ObjectsG5[10].Value;&#xD;
				Data.DiagnoseCounters.InrushProtectionRelay:=ObjectsG5[11].Value;&#xD;
				&#xD;
				&#xD;
				Done:=TRUE;&#xD;
				&#xD;
				bExecute:=false;&#xD;
				bTimer:=TRUE;&#xD;
				uiStage:=20 ;&#xD;
				;&#xD;
			ELSIF batchSDO.Error THEN&#xD;
			&#xD;
				uiStage:=9000;&#xD;
				Busy:=FALSE;&#xD;
				Error:=TRUE;&#xD;
				ErrorID:=batchSDO.ErrorID;&#xD;
			&#xD;
			END_IF;&#xD;
			&#xD;
		&#xD;
		20: // Wait ElapsedTime&#xD;
		&#xD;
		&#xD;
			IF tmrTimer.Q THEN&#xD;
				bTimer:=FALSE;&#xD;
				uiStage:=10;&#xD;
			END_IF;&#xD;
			&#xD;
			tmrTimer(In:=bTimer, PT:=UpdateTime);&#xD;
			&#xD;
		&#xD;
	&#xD;
	END_CASE;&#xD;
	&#xD;
ELSIF NOT  Enable  THEN &#xD;
	&#xD;
	bInit:= FALSE	;&#xD;
	bExecute	:=	FALSE;	&#xD;
	uiStage	:=0;	&#xD;
	bTimer	:=FALSE;		&#xD;
	Busy:=FALSE;&#xD;
	Done:=FALSE;&#xD;
	//Error:=FALSE;&#xD;
	&#xD;
	&#xD;
END_IF;&#xD;
&#xD;
batchSDO(&#xD;
	Execute:=bExecute,&#xD;
	NodeAddress:=Node ,&#xD;
	ItemNbr:=uiMaxIndex,&#xD;
	Timeout:=TimeOut ,&#xD;
	index=&gt; uiIndex,&#xD;
	&#xD;
	Data:=ObjectsG5 )&#xD;
	;</Text></StructuredTextModel>